{"version":3,"sources":["components/ProjectList.js","components/AddProject.js","components/Projects.js","services/auth.js","components/Navbar.js","components/EditProject.js","components/AddTask.js","components/TaskList.js","components/ProjectDetails.js","components/TaskDetails.js","components/Signup.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["ProjectList","props","console","log","projects","map","project","key","_id","to","title","AddProject","state","description","handleChange","event","name","target","value","setState","handleSubmit","preventDefault","axios","post","then","getData","catch","err","Form","onSubmit","this","Group","Label","htmlFor","Control","type","id","onChange","Button","Component","Projects","componentDidMount","get","response","data","className","signup","username","password","login","handleLogout","delete","setUser","Navbar","user","bg","Brand","onClick","EditProject","AddTask","projectId","hideForm","TaskList","tasks","length","task","ProjectDetails","error","editForm","taskForm","deleteProject","match","params","history","push","toggleTaskForm","put","toggleEditForm","status","allowedToDelete","owner","variant","TaskDetails","taskId","Signup","message","Alert","Login","App","exact","path","render","component","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f98d49e1.chunk.js","sourcesContent":["\n\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ProjectList(props) {\n  console.log(props.projects);\n  return (\n    <div>\n      <h2>Projects: </h2>\n      {props.projects.map(project => {\n        return (\n          <div key={project._id}>\n            <h3>\n              <Link to={`/projects/${project._id}`}>{project.title}</Link>\n            </h3>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class AddProject extends Component {\n  state = {\n    title: '',\n    description: ''\n  };\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    // const value =\n    //   event.target.type === 'checkbox'\n    //     ? event.target.checked\n    //     : event.target.value;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // http://localhost:5555/api/projects\n    axios\n      .post('/api/projects', {\n        title: this.state.title,\n        description: this.state.description\n      })\n      .then(() => {\n        this.setState({\n          title: '',\n          description: ''\n        });\n        // updates the parent's component's state, which causes new props to be passed to the <ProjectList/> component\n        this.props.getData();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {/* all groups (label + input) are grouped in a Form.Group */}\n        <Form.Group>\n          {/* <label></label> */}\n          <Form.Label htmlFor='title'>Title: </Form.Label>\n          {/* <input /> */}\n          <Form.Control\n            type='text'\n            id='title'\n            name='title'\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='description'>Description: </Form.Label>\n          <Form.Control\n            type='text'\n            name='description'\n            id='description'\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Button type='submit'>Add Project</Button>\n      </Form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ProjectList from './ProjectList';\nimport AddProject from './AddProject';\nimport axios from 'axios';\n\nexport default class Projects extends Component {\n  state = {\n    projects: []\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  getData = () => {\n    axios\n      .get('/api/projects')\n      .then(response => {\n        this.setState({\n          projects: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    console.log(this.state.projects);\n    return (\n      <div className='projects-container'>\n        <AddProject getData={this.getData} />\n        <ProjectList projects={this.state.projects} />\n      </div>\n    );\n  }\n}","import axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n    .post('/api/auth/signup', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post('/api/auth/login', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete('/api/auth/logout')\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };","\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Navbar as Nav } from 'react-bootstrap';\nimport { logout } from '../services/auth';\n\nconst handleLogout = props => {\n  logout();\n  props.setUser(null);\n}\n\nexport default function Navbar(props) {\n  console.log('user: ', props.user);\n  return (\n    <Nav className='nav justify-content-end' bg='primary'>\n      {props.user && <Nav.Brand>Welcome {props.user.username} 🙃</Nav.Brand>}\n      <Nav.Brand>\n        <Link to='/'>Home</Link>\n      </Nav.Brand>\n      {props.user ? (\n        <>\n          <Nav.Brand>\n            <Link to='/projects'>Projects</Link>\n          </Nav.Brand>\n          <Nav.Brand>\n            <Link to='/' onClick={() => handleLogout(props)}>Logout</Link>\n          </Nav.Brand>\n        </>\n      ) : (\n          <>\n            <Nav.Brand>\n              <Link to='/signup'>Signup</Link>\n            </Nav.Brand>\n            <Nav.Brand>\n              <Link to='/login'>Login</Link>\n            </Nav.Brand>\n          </>\n        )}\n    </Nav>\n  )\n}\n","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nclass EditProject extends Component {\n  render() {\n    console.log(this.props.title);\n    return (\n      <div>\n        <h2>Edit project: </h2>\n        <Form onSubmit={this.props.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              type='text'\n              name='title'\n              value={this.props.title}\n              onChange={this.props.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description:</Form.Label>\n            <Form.Control\n              type='text'\n              name='description'\n              value={this.props.description}\n              onChange={this.props.handleChange}\n            />\n          </Form.Group>\n\n          <Button type='submit'>Edit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default EditProject;","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default class AddTask extends Component {\n  state = {\n    title: '',\n    description: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { title, description } = this.state;\n\n    axios\n      .post('/api/tasks', {\n        title,\n        description,\n        projectId: this.props.projectId\n      })\n      .then(() => {\n        this.props.getData();\n        this.props.hideForm();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Add task: </h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control\n              type='text'\n              name='title'\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description:</Form.Label>\n            <Form.Control\n              type='text'\n              name='description'\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Button type='submit'>Add</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TaskList = props => {\n  return (\n    <div>\n      {props.tasks.length > 0 && <h2>Tasks:</h2>}\n      {props.tasks.map(task => {\n        return (\n          <div key={task._id}>\n            <Link to={`/tasks/${task._id}`}>\n              <h3>{task.title}</h3>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TaskList;","// src/components/ProjectDetails.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport EditProject from './EditProject';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\n\nexport default class ProjectDetails extends Component {\n\n  state = {\n    project: null,\n    error: null,\n    title: '',\n    description: '',\n    editForm: false,\n    taskForm: false\n  }\n\n  deleteProject = () => {\n    const id = this.props.match.params.id;\n    axios.delete(`/api/projects/${id}`)\n      .then(() => {\n        this.props.history.push('/projects');\n      })\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  toggleTaskForm = () => {\n    this.setState({\n      taskForm: !this.state.taskForm\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios.put(`/api/projects/${id}`, {\n      title: this.state.title,\n      description: this.state.description\n    })\n      .then(response => {\n        this.setState({\n          project: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          editForm: false\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  toggleEditForm = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    })\n  }\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    axios\n      .get(`/api/projects/${id}`)\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          project: response.data,\n          title: response.data.title,\n          description: response.data.description\n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n        // handle err.response depending on err.response.status\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    if (this.state.error) return <div>{this.state.error}</div>;\n    if (!this.state.project) return (<></>)\n\n\n    // we set a boolean if there is a loggedinUser and the user is also the owner of the project\n    let allowedToDelete = false;\n    const user = this.props.user;\n    console.log(user);\n    const owner = this.state.project.owner;\n    if (user && user._id === owner) allowedToDelete = true;\n\n    return (\n      <div>\n        <h1>{this.state.project.title}</h1>\n        <p>{this.state.project.description}</p>\n        {allowedToDelete && (\n          <Button variant='danger' onClick={this.deleteProject}>Delete Project</Button>\n        )}\n        <Button onClick={this.toggleEditForm}>Show Edit Form</Button>\n        <Button onClick={this.toggleTaskForm}>Show Task Form</Button>\n        {this.state.editForm && (\n          <EditProject\n            {...this.state}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        )}\n        {this.state.taskForm && (\n          <AddTask\n            projectId={this.state.project._id}\n            getData={this.getData}\n            hideForm={() => this.setState({ taskForm: false })}\n          />\n        )}\n        <TaskList tasks={this.state.project.tasks} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nexport default class TaskDetails extends Component {\n  state = {\n    title: '',\n    description: '',\n    project: ''\n  };\n\n  componentDidMount() {\n    const taskId = this.props.match.params.id;\n\n    return axios\n      .get(`/api/tasks/${taskId}`)\n      .then(response => {\n        const { title, description, project } = response.data;\n        this.setState({ title, description, project });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const task = {\n      title: this.state.title,\n      description: this.state.description,\n      project: this.state.project\n    };\n\n    return (\n      <div>\n        <h1>{task.title}</h1>\n        <p>{task.description}</p>\n        <Link to={`/projects/${task.project}`}>Back to project</Link>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { signup } from '../services/auth';\n\nexport default class Signup extends Component {\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    signup(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n      } else {\n        this.props.setUser(data);\n        this.props.history.push('/projects');\n      }\n    });\n  };\n\n  render() {\n    console.log(this.props)\n    return (\n      <>\n        <h2>Signup</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor='username'>Username: </Form.Label>\n            <Form.Control\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='password'>Password: </Form.Label>\n            <Form.Control\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant='danger'>{this.state.message}</Alert>\n          )}\n          <Button type='submit'>Signup</Button>\n        </Form>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { login } from '../services/auth';\n\nexport default class Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    login(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n      } else {\n        // successfully logged in\n        // update the state for the parent component\n        this.props.setUser(data);\n        this.props.history.push('/projects');\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Login</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor='username'>Username: </Form.Label>\n            <Form.Control\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='password'>Password: </Form.Label>\n            <Form.Control\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant='danger'>{this.state.message}</Alert>\n          )}\n          <Button type='submit'>Login</Button>\n        </Form>\n      </>\n    );\n  }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Route, Redirect } from 'react-router-dom';\nimport Projects from './components/Projects';\nimport Navbar from './components/Navbar';\nimport ProjectDetails from './components/ProjectDetails';\nimport TaskDetails from './components/TaskDetails';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\n\nclass App extends React.Component {\n\n  state = {\n    user: this.props.user\n  }\n\n  setUser = user => this.setState({ user })\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Navbar user={this.state.user} setUser={this.setUser} />\n\n        <Route\n          exact\n          path='/projects'\n          // component={Projects}\n          render={props => {\n            if (this.state.user) return <Projects {...props} />\n            else return <Redirect to='/' />\n          }}\n        />\n        <Route\n          exact\n          path='/projects/:id'\n          render={props => <ProjectDetails user={this.state.user} {...props} />}\n        />\n        <Route\n          exact\n          path='/tasks/:id'\n          component={TaskDetails}\n        />\n        <Route\n          exact\n          path='/signup'\n          // to the Signup we pass a reference to the setUser method\n          // here we use the render prop - The term “render prop” refers to a technique for sharing \n          // code between React components using a prop whose value is a function.\n          // A component with a render prop takes a function that returns a React element and calls it \n          // instead of implementing its own render logic.\n          render={props => <Signup setUser={this.setUser} {...props} />}\n        />\n        <Route\n          exact\n          path='/login'\n          render={props => <Login setUser={this.setUser} {...props} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\n\n// get logged in user and pass it as a prop\naxios.get('/api/auth/loggedin')\n  .then(response => {\n    const user = response.data;\n    ReactDOM.render(\n      <BrowserRouter>\n        <App user={user} />\n      </BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}